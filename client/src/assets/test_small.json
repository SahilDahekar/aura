{
    "@programName": "ZAP",
    "@version": "2.15.0",
    "@generated": "Sat, 30 Nov 2024 06:33:40",
    "site": [
        {
            "@name": "http://testphp.vulnweb.com",
            "@host": "testphp.vulnweb.com",
            "@port": "80",
            "@ssl": "false",
            "alerts": [
                {
                    "pluginid": "10202",
                    "alertRef": "10202",
                    "alert": "Absence of Anti-CSRF Tokens",
                    "name": "Absence of Anti-CSRF Tokens",
                    "riskcode": "2",
                    "confidence": "1",
                    "riskdesc": "Medium (Low)",
                    "desc": "<p>No Anti-CSRF tokens were found in a HTML submission form.</p><p>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.</p><p></p><p>CSRF attacks are effective in a number of situations, including:</p><p>    * The victim has an active session on the target site.</p><p>    * The victim is authenticated via HTTP auth on the target site.</p><p>    * The victim is on the same local network as the target site.</p><p></p><p>CSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.</p>",
                    "instances": [
                        {
                            "uri": "http://testphp.vulnweb.com/cart.php",
                            "method": "POST",
                            "param": "",
                            "attack": "",
                            "evidence": "<form action=\"search.php?test=query\" method=\"post\">",
                            "otherinfo": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: \"goButton\" \"searchFor\" ]."
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/guestbook.php",
                            "method": "POST",
                            "param": "",
                            "attack": "",
                            "evidence": "<form action=\"\" method=\"post\" name=\"faddentry\">",
                            "otherinfo": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: \"name\" \"submit\" ]."
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/guestbook.php",
                            "method": "POST",
                            "param": "",
                            "attack": "",
                            "evidence": "<form action=\"search.php?test=query\" method=\"post\">",
                            "otherinfo": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 2: \"goButton\" \"searchFor\" ]."
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/search.php?test=query",
                            "method": "POST",
                            "param": "",
                            "attack": "",
                            "evidence": "<form action=\"search.php?test=query\" method=\"post\">",
                            "otherinfo": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: \"goButton\" \"searchFor\" ]."
                        }
                    ],
                    "count": "4",
                    "solution": "<p>Phase: Architecture and Design</p><p>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.</p><p>For example, use anti-CSRF packages such as the OWASP CSRFGuard.</p><p></p><p>Phase: Implementation</p><p>Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.</p><p></p><p>Phase: Architecture and Design</p><p>Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Use the ESAPI Session Management control.</p><p>This control includes a component for CSRF.</p><p></p><p>Do not use the GET method for any request that triggers a state change.</p><p></p><p>Phase: Implementation</p><p>Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.</p>",
                    "otherinfo": "<p>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: \"goButton\" \"searchFor\" ].</p>",
                    "reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html</p><p>https://cwe.mitre.org/data/definitions/352.html</p>",
                    "cweid": "352",
                    "wascid": "9",
                    "sourceid": "169"
                },
                {
                    "pluginid": "10038",
                    "alertRef": "10038-1",
                    "alert": "Content Security Policy (CSP) Header Not Set",
                    "name": "Content Security Policy (CSP) Header Not Set",
                    "riskcode": "2",
                    "confidence": "3",
                    "riskdesc": "Medium (High)",
                    "desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
                    "instances": [
                        {
                            "uri": "http://testphp.vulnweb.com",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/cart.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/categories.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/disclaimer.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/guestbook.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/high",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/index.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/login.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/privacy.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/robots.txt",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/sitemap.xml",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        }
                    ],
                    "count": "12",
                    "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.</p>",
                    "otherinfo": "",
                    "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy</p><p>https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html</p><p>https://www.w3.org/TR/CSP/</p><p>https://w3c.github.io/webappsec-csp/</p><p>https://web.dev/articles/csp</p><p>https://caniuse.com/#feat=contentsecuritypolicy</p><p>https://content-security-policy.com/</p>",
                    "cweid": "693",
                    "wascid": "15",
                    "sourceid": "1"
                },
                {
                    "pluginid": "10020",
                    "alertRef": "10020-1",
                    "alert": "Missing Anti-clickjacking Header",
                    "name": "Missing Anti-clickjacking Header",
                    "riskcode": "2",
                    "confidence": "2",
                    "riskdesc": "Medium (Medium)",
                    "desc": "<p>The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.</p>",
                    "instances": [
                        {
                            "uri": "http://testphp.vulnweb.com",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/AJAX/index.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/artists.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/cart.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/categories.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/disclaimer.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/guestbook.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/hpp/",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/index.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/login.php",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/",
                            "method": "GET",
                            "param": "x-frame-options",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        }
                    ],
                    "count": "11",
                    "solution": "<p>Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.</p><p>If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.</p>",
                    "otherinfo": "",
                    "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options</p>",
                    "cweid": "1021",
                    "wascid": "15",
                    "sourceid": "1"
                },
                {
                    "pluginid": "10009",
                    "alertRef": "10009",
                    "alert": "In Page Banner Information Leak",
                    "name": "In Page Banner Information Leak",
                    "riskcode": "1",
                    "confidence": "3",
                    "riskdesc": "Low (High)",
                    "desc": "<p>The server returned a version banner string in the response content. Such information leaks may allow attackers to further target specific issues impacting the product and version in use.</p>",
                    "instances": [
                        {
                            "uri": "http://testphp.vulnweb.com/high",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "nginx/1.19.0",
                            "otherinfo": "There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body."
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/robots.txt",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "nginx/1.19.0",
                            "otherinfo": "There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body."
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/sitemap.xml",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "nginx/1.19.0",
                            "otherinfo": "There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body."
                        }
                    ],
                    "count": "3",
                    "solution": "<p>Configure the server to prevent such information leaks. For example:</p><p>Under Tomcat this is done via the \"server\" directive and implementation of custom error pages.</p><p>Under Apache this is done via the \"ServerSignature\" and \"ServerTokens\" directives.</p>",
                    "otherinfo": "<p>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</p>",
                    "reference": "<p>https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/</p>",
                    "cweid": "200",
                    "wascid": "13",
                    "sourceid": "34"
                },
                {
                    "pluginid": "10063",
                    "alertRef": "10063-1",
                    "alert": "Permissions Policy Header Not Set",
                    "name": "Permissions Policy Header Not Set",
                    "riskcode": "1",
                    "confidence": "2",
                    "riskdesc": "Low (Medium)",
                    "desc": "<p>Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.</p>",
                    "instances": [
                        {
                            "uri": "http://testphp.vulnweb.com",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/cart.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/categories.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/disclaimer.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/guestbook.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/high",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/index.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/login.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/privacy.php",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/robots.txt",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        },
                        {
                            "uri": "http://testphp.vulnweb.com/sitemap.xml",
                            "method": "GET",
                            "param": "",
                            "attack": "",
                            "evidence": "",
                            "otherinfo": ""
                        }
                    ],
                    "count": "12",
                    "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.</p>",
                    "otherinfo": "",
                    "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy</p><p>https://developer.chrome.com/blog/feature-policy/</p><p>https://scotthelme.co.uk/a-new-security-header-feature-policy/</p><p>https://w3c.github.io/webappsec-feature-policy/</p><p>https://www.smashingmagazine.com/2018/12/feature-policy/</p>",
                    "cweid": "693",
                    "wascid": "15",
                    "sourceid": "1"
                }
            ]
        }
    ]
}